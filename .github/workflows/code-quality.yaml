name: Code Quality Checks
on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
jobs:
  selenium-tests:
    name: Selenium Tests
    runs-on: ubuntu-latest
    env:
      # ECR_BACKEND_REPOSITORY: organic-platform-backend
      PROJECT: wordpress-plugin
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure poetry
        run: |
          poetry self add poetry-dotenv-plugin
          poetry config virtualenvs.in-project true

      # Testing
      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install poetry dependencies
        run: |
          poetry install

      - name: Build the environment
        run: |
          mv .env.ci .env
          export ORGANIC_DEMO_SITE_APIKEY="${{ secrets.ORGANIC_DEMO_SITE_API_KEY }}"
          export COMPOSER_AUTH="{\"github-oauth\":{\"github.com\":\"${{ secrets.GITHUB_TOKEN }}\"}}"
          export COMPOSER_AUTH_DEBUG="{\"github-oauth\":{\"github.com\":\"${{ secrets.TEST_SECRET }}\"}}"
          echo $COMPOSER_AUTH_DEBUG
          poetry run ./dev.py up

      - name: Run Tests
        run: |
          poetry run ./dev.py run-tests

      # Stop running containers and clean-up
      - name: Clean up
        if: always()
        run: |
          docker compose -p ${{ env.PROJECT }} -f docker-compose.yml down --remove-orphans --volumes